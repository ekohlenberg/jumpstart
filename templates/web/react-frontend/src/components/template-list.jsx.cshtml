import React, { Component } from 'react'
import @(Model.DomainObj)Service from '../services/@(Model.DomainObj)Service';

class @(Model.DomainObj)ListComponent extends Component {
    constructor(props) {
        super(props)

        this.state = {
                @(Model.DomainVar)s: []
        }
        this.add@(Model.DomainObj) = this.add@(Model.DomainObj).bind(this);
        this.edit@(Model.DomainObj) = this.edit@(Model.DomainObj).bind(this);
        this.delete@(Model.DomainObj) = this.delete@(Model.DomainObj).bind(this);
    }

    delete@(Model.DomainObj)(id){
        @(Model.DomainObj)Service.delete@(Model.DomainObj)(id).then( res => {
            this.setState({@(Model.DomainVar)s: this.state.@(Model.DomainVar)s.filter(@(Model.DomainVar) => @(Model.DomainVar).id !== id)});
        });
    }
    view@(Model.DomainObj)(id){
        this.props.history.push(`/view-@(Model.DomainVar)/${id}`);
    }
    edit@(Model.DomainObj)(id){
        console.log("editing " + id)
        this.props.history.push(`/add-@(Model.DomainVar)/${id}`);
    }

    componentDidMount(){
        @(Model.DomainObj)Service.get@(Model.DomainObj)s().then((res) => {
            this.setState({ @(Model.DomainVar)s: res.data});
        });
    }

    add@(Model.DomainObj)(){
        this.props.history.push('/add-@(Model.DomainVar)/_add');
    }

    render() {
        return (
            <div>
                 <h2 className="text-center">@(Model.DomainObj) List</h2>
                 <div className = "row">
                    <button className="btn btn-primary" onClick={this.add@(Model.DomainObj)}> Add @(Model.DomainObj)</button>
                 </div>
                 <br></br>
                 <div className = "row">
                        <table className = "table table-striped table-bordered">

                            <thead>
                                <tr>
                                    @foreach( var attr in Model.Attributes)
                                    {
                                    <text>
                                    <th>@(attr.Label)</th>
                                    </text>
                                    }
    
                                </tr>
                            </thead>
                            <tbody>
                                {
                                    this.state.@(Model.DomainVar)s.map(
                                        @(Model.DomainVar) => 
                                        <tr key = {@(Model.DomainVar).id}>
                                            @foreach(var attr in Model.Attributes)
                                            {
                                                <text>
                                                <td> {@(Model.DomainVar).@(attr.Name))} </td>  
                                                </text>
                                            }
                                             <td>
                                                 <button onClick={ () => this.edit@(Model.DomainObj)(@(Model.DomainVar).id)} className="btn btn-info">Update </button>
                                                 <button style={{marginLeft: "10px"}} onClick={ () => this.delete@(Model.DomainObj)(@(Model.DomainVar).id)} className="btn btn-danger">Delete </button>
                                                
                                             </td>
                                        </tr>
                                    )
                                }
                            </tbody>
                        </table>

                 </div>

            </div>
        )
    }
}

export default @(Model.DomainObj)ListComponent;