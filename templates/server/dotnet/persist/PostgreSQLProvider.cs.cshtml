using System;
using System.Data.Common;
using Npgsql;

namespace @Model.Name
{
    public class PostgreSQLProvider : IDatabaseProvider
    {
        public DbConnection CreateConnection(string connectionString)
        {
            return new NpgsqlConnection(connectionString);
        }

        public DbCommand CreateCommand(string sql, DbConnection connection)
        {
            return new NpgsqlCommand(sql, (NpgsqlConnection)connection);
        }

        public string GetNextIdentitySql(string tableName)
        {
            return $"SELECT nextval('{tableName}_identity');";
        }

        public string GetVersionSql(string tableName, long id)
        {
            return $@@"with ver_check as (
                select max(version) as v from {tableName}
                where id={id}
                union all select 0 as v
                )
                select max(v)+1 from ver_check";
        }

        public string FormatParameter(string parameterName)
        {
            return $"@{parameterName}";
        }

        public string FormatTableName(string tableName)
        {
            return $"\"{tableName}\"";
        }

        public string FormatColumnName(string columnName)
        {
            return $"\"{columnName}\"";
        }

        public string FormatValue(object value)
        {
            if (value == null) return "NULL";

            if (value.GetType().Equals(typeof(DateTime)))
            {
                DateTime d = (DateTime)value;
                return $"'{d.ToString("yyyy-MM-dd HH:mm:ss")}'";
            }
            else if (value.GetType().Equals(typeof(string)))
            {
                return $"'{value.ToString().Replace("'", "''")}'";
            }
            else if (value.GetType().FullName.Contains("Text"))
            {
                return $"'{value.ToString().Replace("'", "''")}'";
            }
            else
            {
                return value.ToString();
            }
        }

        public string GetParameterPrefix()
        {
            return "@@";
        }
    }
} 