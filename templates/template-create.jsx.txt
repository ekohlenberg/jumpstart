import React, { Component } from 'react'
import ^(domain-obj)Service from '../services/^(domain-obj)Service';



class ^(domain-obj)CreateComponent extends Component {
    constructor(props) {
        super(props)

        this.state = {
            // step 2
            id: this.props.match.params.id,
            ^(create-defaults-partial)
        }
         ^(create-handlers-partial)

        this.saveOrUpdate^(domain-obj) = this.saveOrUpdate^(domain-obj).bind(this);
    }

    // step 3
    componentDidMount(){

        

        // step 4
        if(this.state.id === '_add'){
            return
        }else{
            console.log ("^(domain-obj) componentDidMount() ID= " + this.state.id )
            ^(domain-obj)Service.get^(domain-obj)ById(this.state.id).then( (res) =>{
                let ^(domain-var) = res.data;
                this.setState({
                    ^(create-setstate-partial)
                });
            });
        }   
        
       ;
    }
    saveOrUpdate^(domain-obj) = (e) => {
        e.preventDefault();
        let ^(domain-var) = {
            ^(create-save-partial)
        };
        console.log('^(domain-var) => ' + JSON.stringify(^(domain-var)));

        // step 5
        if(this.state.id === '_add'){
            ^(domain-obj)Service.create^(domain-obj)(^(domain-var)).then(res =>{
                this.props.history.push('/^(domain-var)');
            });
        }else{
            ^(domain-obj)Service.update^(domain-obj)(^(domain-var), this.state.id).then( res => {
                this.props.history.push('/^(domain-var)');
            });
        }
    }
    
    ^(create-events-partial)

    cancel(){
        this.props.history.push('/^(domain-var)');
    }

    getTitle(){
        if(this.state.id === '_add'){
            return <h3 className="text-center">Add ^(domain-obj)</h3>
        }else{
            return <h3 className="text-center">Update ^(domain-obj)</h3>
        }
    }
    render() {
        return (
            <div>
                <br></br>
                   <div className = "container">
                        <div className = "row">
                            <div className = "card col-md-6 offset-md-3 offset-md-3">
                                {
                                    this.getTitle()
                                }
                                <div className = "card-body">
                                    <form>
                                        ^(create-form-partial)
                                        <button className="btn btn-success" onClick={this.saveOrUpdate^(domain-obj)}>Save</button>
                                        <button className="btn btn-danger" onClick={this.cancel.bind(this)} style={{marginLeft: "10px"}}>Cancel</button>
                                    </form>
                                </div>
                            </div>
                        </div>

                   </div>
            </div>
        )
    }
}

export default ^(domain-obj)CreateComponent;