using System;
using System.Collections.Generic;



namespace @Model.Namespace
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                
                List<OpRole> opRoles = OpRoleLogic.Create().select();
                var adminRole = opRoles.Find(role => role.name == "Administrator");

                BaseTest.addLastId("op_role", adminRole.id);

                List<User> users = UserLogic.Create().select();
                var currentUser = users.Find(user => user.username == Environment.UserName);

                if (currentUser == null)
                {
                    UserTest.testInsert();  
                    long userId = BaseTest.getLastId("User");
                    OpRoleMemberTest.testInsert();
                }
                else
                {
                    BaseTest.addLastId("user", currentUser.id);

                    List<OpRoleMember> opRoleMembers = OpRoleMemberLogic.Create().select();
                    var adminRoleMembership = opRoleMembers.Find(membership => membership.user_id == currentUser.id && membership.op_role_id == adminRole.id);

                    if (adminRoleMembership == null)
                    {
                        OpRoleMemberTest.testInsert();
                    }
                }
                

                @foreach (var metaObject in Model.Objects)
                {
                    if (metaObject.SchemaName == "sec") continue;
                    if (metaObject.SchemaName == "core") continue;
                    if (metaObject.DomainObj == "User") continue;
                    
                    var domainObj = metaObject.DomainObj;
                <text>
                Logger.Info("Testing @(domainObj)");
                @(domainObj)Test.testInsert();            
                @(domainObj)Test.testUpdate();            
                </text>
                    
                }
            }
            catch( Exception x)
            {
                Logger.Error("Error executing test: ", x);
                Console.WriteLine(x.Message);
                Console.WriteLine(x.StackTrace);

                if (x.InnerException != null)
                {
                    x = x.InnerException;
                    Console.WriteLine(x.Message);
                    Console.WriteLine(x.StackTrace);
                }	
            }
		}
    }
}
